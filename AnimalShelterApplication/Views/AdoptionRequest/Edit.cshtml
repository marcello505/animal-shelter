@model Core.Models.AdoptionRequest

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>AdoptionRequest</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" readonly />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Telephone" class="control-label"></label>
                <input asp-for="Telephone" class="form-control" />
                <span asp-validation-for="Telephone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Animal1" class="control-label"></label>
                <br />
                <select asp-for="Animal1">
                <option value="">Select an animal</option>
                    @if (Model != null && Model.Animal1 != null)
                    {
                        @await Component.InvokeAsync("AnimalSelectList", new { id = Model.Animal1})
                    }
                    else
                    {
                        @await Component.InvokeAsync("AnimalSelectList", new { id = -1})
                    }
                </select>
                <br />
                <span asp-validation-for="Animal1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Animal2" class="control-label"></label>
                <br />
                <select asp-for="Animal2">
                <option value="">Select an animal</option>
                    @if (Model != null && Model.Animal2 != null)
                    {
                        @await Component.InvokeAsync("AnimalSelectList", new { id = Model.Animal2})
                    }
                    else
                    {
                        @await Component.InvokeAsync("AnimalSelectList", new { id = -1})
                    }
                </select>
                <br />
                <span asp-validation-for="Animal2" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Animal3" class="control-label"></label>
                <br />
                <select asp-for="Animal3">
                <option value="">Select an animal</option>
                    @if (Model != null && Model.Animal3 != null)
                    {
                        @await Component.InvokeAsync("AnimalSelectList", new { id = Model.Animal3})
                    }
                    else
                    {
                        @await Component.InvokeAsync("AnimalSelectList", new { id = -1})
                    }
                </select>
                <br />
                <span asp-validation-for="Animal3" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
